package ambiguityTest;

public interface InterA {
	default void printData()	{	
//		인터페이스에선 추상메소드 abstract가 생략되어 있다, default메소드 생성을 위해 직접 사용해줘야한다.
		System.out.println("InterA");
	}
}

//	인터페이스 : 틀 , 클래스와 흡사하지만? 전혀 다르다.
//	추상메소드와 마찬가지로, 인터페이스도 "강제성" 부여를 위해 사용된다!
//	인터페이스를 다른 클래스에 지정할 때에는 "implements" 키워드를 사용한다!!
//	-> 인터페이스에선 추상메소드(abstract)가 생략되어있다, 즉 abstract를 쓰지 않아도 추상메소드로 인식한다.
//	--> 단, 일반메소드 생성을 위해서는 default를 써야한다.

//	인터페이스란?
//	추상클래스를 """고도화"""시킨 문법이다. ----> 강제성을 ""심화""시킨 문법이다.
//	인터페이스 안에서는 "상수"와 "추상메소드"만 존재한다.
//	틀을 제공한다
//	-> 말 그대로 틀만을 제공하며, 구현은 인터페이스를 지정한(implements) 클래스에서 한다.
